generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Avatar {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  nom_avatar     String          @unique @db.VarChar(30)
  avatar_usuario AvatarUsuario[]

  @@map("avatar")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model AvatarUsuario {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  id_avatar  Int     @db.UnsignedInt
  id_usuario Int     @unique @db.UnsignedInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id], onUpdate: Restrict, map: "avatar_usuario_ibfk_1")
  avatar     Avatar  @relation(fields: [id_avatar], references: [id], onUpdate: Restrict, map: "avatar_usuario_ibfk_2")

  @@index([id_avatar], map: "id_avatar")
  @@index([id_usuario], map: "id_usuario")
  @@map("avatar_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model GradoUsuario {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  id_grado   Int     @db.UnsignedInt
  id_usuario Int     @db.UnsignedInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id], onUpdate: Restrict, map: "grado_usuario_ibfk_1")
  grados     Grado   @relation(fields: [id_grado], references: [id], onUpdate: Restrict, map: "grado_usuario_ibfk_2")

  @@index([id_grado], map: "id_grado")
  @@index([id_usuario], map: "id_usuario")
  @@map("grado_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Grado {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  nom_grado     String         @unique @db.VarChar(30)
  grado_usuario GradoUsuario[]
  libros        Libro[]

  @@map("grados")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Libro {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  nom_libro  String      @unique @db.VarChar(100)
  num_pag    Int         @db.UnsignedTinyInt
  cant_leido Int         @db.UnsignedInt
  id_grado   Int         @db.UnsignedInt
  grados     Grado       @relation(fields: [id_grado], references: [id], onUpdate: Restrict, map: "libros_ibfk_1")
  mis_libros MisLibros[]
  preguntas  Pregunta[]

  @@index([id_grado], map: "id_grado")
  @@map("libros")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MisLibros {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  id_usuario Int     @db.UnsignedInt
  id_libro   Int     @db.UnsignedInt
  terminado  Boolean
  libros     Libro   @relation(fields: [id_libro], references: [id], onUpdate: Restrict, map: "mis_libros_ibfk_1")
  usuario    Usuario @relation(fields: [id_usuario], references: [id], onUpdate: Restrict, map: "mis_libros_ibfk_2")

  @@index([id_libro], map: "id_libro")
  @@index([id_usuario], map: "id_usuario")
  @@map("mis_libros")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Pregunta {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  num_pregunta Int    @db.UnsignedTinyInt
  pregunta     String @unique @db.VarChar(200)
  resA         String @unique @db.VarChar(100)
  resB         String @unique @db.VarChar(100)
  resC         String @unique @db.VarChar(100)
  resD         String @unique @db.VarChar(100)
  id_libro     Int    @db.UnsignedInt
  libros       Libro  @relation(fields: [id_libro], references: [id], onUpdate: Restrict, map: "preguntas_ibfk_1")

  @@index([id_libro], map: "id_libro")
  @@map("preguntas")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Usuario {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  username       String          @unique @db.VarChar(50)
  p_nombre       String          @db.VarChar(30)
  s_nombre       String?         @db.VarChar(30)
  p_apellido     String          @db.VarChar(30)
  s_apellido     String?         @db.VarChar(30)
  email          String          @unique @db.VarChar(100)
  password       String          @db.VarChar(12)
  avatar_usuario AvatarUsuario[]
  grado_usuario  GradoUsuario[]
  mis_libros     MisLibros[]

  @@map("usuario")
}
